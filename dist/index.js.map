{"version":3,"sources":["../src/index.js"],"names":["FlexPaneBar","props","paneProps","children","React","Children","map","child","type","FlexPaneButtons","FlexPaneTitle","buttons","cloneElement","className","mode","index","undefined","modes","classNames1","classNames2","classNames3","onButtonClick","title","FlexPane","refPane","createRef","classNames_","toArray","flexPaneBar","slice","Component","FlexPaneContainer","state","handleButtonClick","bind","setState"],"mappings":"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","file":"index.js","sourcesContent":["\r\nimport React from \"react\"\r\n\r\nimport classNames from \"classnames\"\r\n\r\n// nodemon -w src --exec npm run repack\r\n\r\n\r\n/** <FlexPaneBar><FlexPaneButtons/><FlexPaneTitle/></FlexPaneBar>\r\n * \r\n */\r\nexport const FlexPaneBar = (props) => {\r\n\r\n    let paneProps = props.paneProps || {}\r\n\r\n    let children = React.Children.map(props.children,(child) => {\r\n        if (child.type === FlexPaneButtons || child.type === FlexPaneTitle) {\r\n            let buttons = React.cloneElement(child,{paneProps})\r\n            return buttons\r\n        }\r\n        return child\r\n    })\r\n    return <div className={classNames(\"flexpane-bar\",props.className)}>{children}</div>\r\n}\r\n\r\nexport const FlexPaneButtons = (props) => {\r\n\r\n    let paneProps = props.paneProps || {}\r\n\r\n    let mode = paneProps.index !== undefined ? paneProps.modes[paneProps.index] : \"normal\"\r\n    let classNames1 = classNames(\"flexpane-button\",\"flexpane-maximize\",{\"flexpane-button-active\":mode !== \"maximized\"})\r\n    let classNames2 = classNames(\"flexpane-button\",\"flexpane-normalize\",{\"flexpane-button-active\":mode !== \"normal\"})\r\n    let classNames3 = classNames(\"flexpane-button\",\"flexpane-hide\",{\"flexpane-button-active\":mode !== \"hidden\"})\r\n\r\n    return  <ul className={classNames(props.className,\"flexpane-buttons\")}> \r\n                <li key=\"0\"><button className={classNames1} onClick={() => {paneProps.onButtonClick(paneProps.index,\"maximized\")}}><svg enableBackground=\"new 0 0 32 32\" height=\"32px\" id=\"Layer_1\" version=\"1.1\" viewBox=\"0 0 32 32\" width=\"32px\" xmlSpace=\"preserve\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\"><path d=\"M18.221,7.206l9.585,9.585c0.879,0.879,0.879,2.317,0,3.195l-0.8,0.801c-0.877,0.878-2.316,0.878-3.194,0  l-7.315-7.315l-7.315,7.315c-0.878,0.878-2.317,0.878-3.194,0l-0.8-0.801c-0.879-0.878-0.879-2.316,0-3.195l9.587-9.585  c0.471-0.472,1.103-0.682,1.723-0.647C17.115,6.524,17.748,6.734,18.221,7.206z\" fill=\"#515151\"/></svg></button></li>\r\n                <li key=\"1\"><button className={classNames2} onClick={() => {paneProps.onButtonClick(paneProps.index,\"normal\")}}><svg enableBackground=\"new 0 0 32 32\" height=\"32px\" id=\"Layer_1\" version=\"1.1\" viewBox=\"0 0 32 32\" width=\"32px\" xmlSpace=\"preserve\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\"><path d=\"M24.291,14.276L14.705,4.69c-0.878-0.878-2.317-0.878-3.195,0l-0.8,0.8c-0.878,0.877-0.878,2.316,0,3.194  L18.024,16l-7.315,7.315c-0.878,0.878-0.878,2.317,0,3.194l0.8,0.8c0.878,0.879,2.317,0.879,3.195,0l9.586-9.587  c0.472-0.471,0.682-1.103,0.647-1.723C24.973,15.38,24.763,14.748,24.291,14.276z\" fill=\"#515151\"/></svg></button></li>\r\n                <li key=\"2\"><button className={classNames3} onClick={() => {paneProps.onButtonClick(paneProps.index,\"hidden\")}}><svg enableBackground=\"new 0 0 32 32\" height=\"32px\" id=\"Layer_1\" version=\"1.1\" viewBox=\"0 0 32 32\" width=\"32px\" xmlSpace=\"preserve\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\"><path d=\"M14.77,23.795L5.185,14.21c-0.879-0.879-0.879-2.317,0-3.195l0.8-0.801c0.877-0.878,2.316-0.878,3.194,0  l7.315,7.315l7.316-7.315c0.878-0.878,2.317-0.878,3.194,0l0.8,0.801c0.879,0.878,0.879,2.316,0,3.195l-9.587,9.585  c-0.471,0.472-1.104,0.682-1.723,0.647C15.875,24.477,15.243,24.267,14.77,23.795z\" fill=\"#515151\"/></svg></button></li>\r\n            </ul>\r\n}\r\n\r\n\r\nexport const FlexPaneTitle = (props) => {\r\n    let paneProps = props.paneProps || {title: 'untitled'}\r\n    return <div className={classNames(\"flexpane-title\",props.className)}>{paneProps.title}</div>\r\n}\r\n\r\n/**  <FlexPane> content </FlexPane>\r\n *   <FlexPane><FlexPaneBar/> content </FlexPane>\r\n */\r\nexport class FlexPane extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.refPane = React.createRef()\r\n    }\r\n\r\n    render() {\r\n\r\n        let paneProps = this.props.paneProps || {}\r\n\r\n        paneProps['title'] = this.props.title\r\n\r\n        let mode = paneProps.modes[paneProps.index]\r\n\r\n        let classNames_ = {\r\n            \"flexpane-pane\": true,\r\n            \"flexpane-pane-normal\" : mode === \"normal\",\r\n            \"flexpane-pane-maximum\": mode === \"maximized\",\r\n            \"flexpane-pane-hidden\": mode === \"hidden\"\r\n        }\r\n\r\n        let refPane = this.props.refPane || this.refPane\r\n\r\n        let children = React.Children.toArray(this.props.children)\r\n\r\n        let flexPaneBar\r\n\r\n        if (children[0] && children[0].type === FlexPaneBar) {\r\n            flexPaneBar = React.cloneElement(children[0], {paneProps})\r\n            children = children.slice(1)\r\n        } else {\r\n            flexPaneBar = <FlexPaneBar className={classNames(this.props.className)} paneProps={paneProps}><FlexPaneButtons/><FlexPaneTitle/></FlexPaneBar>\r\n        }\r\n\r\n        return <React.Fragment>\r\n            {flexPaneBar}\r\n            <div key={this.props.index} className={classNames(classNames_,this.props.className)} ref={refPane} >{children}</div>\r\n            </React.Fragment>\r\n    }\r\n}\r\n\r\n/**  <FlexPaneContainer><FlexPane/><FlexPane/><FlexPane/></FlexPaneContainer>\r\n * \r\n */\r\nexport class FlexPaneContainer extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        \r\n        let modes = React.Children.map(this.props.children, (child) => {\r\n            return child.props.mode || \"normal\";\r\n        })\r\n\r\n        this.state = {\r\n            modes: modes\r\n        }\r\n\r\n        this.handleButtonClick = this.handleButtonClick.bind(this)\r\n    }\r\n\r\n    handleButtonClick(index, mode) {\r\n        let modes = this.state.modes.slice()\r\n        if (mode === \"maximized\") {\r\n            modes = modes.map( mode => mode === \"maximized\" ? \"normal\" : mode )\r\n        }\r\n        modes[index] = mode\r\n        this.setState({modes:modes})\r\n    }\r\n\r\n    render() {\r\n        let children = React.Children.map(this.props.children, (child,index) => {\r\n            let paneProps = {modes:this.state.modes, index:index, onButtonClick: this.handleButtonClick}\r\n            child = React.cloneElement(child,{paneProps})\r\n            return child\r\n        })\r\n        return (<div className=\"flexpane-container\">{children}</div>)\r\n    }\r\n}\r\n\r\n"]}