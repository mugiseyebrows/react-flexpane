{"version":3,"sources":["../src/index.js"],"names":["FlexPaneBar","props","console","log","children","React","Children","map","child","type","name","cloneElement","FlexPaneTitle","FlexPaneButtons","mode","modes","index","classNames1","classNames2","classNames3","onButtonClick","title","FlexPane","refPane","createRef","classNames_","className","bar","barProps","Component","FlexPaneContainer","state","handleButtonClick","bind","slice","setState","key"],"mappings":"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","file":"index.js","sourcesContent":["\r\nimport React from \"react\"\r\n\r\nimport classNames from \"classnames\"\r\n\r\nexport let FlexPaneBar = (props) => {\r\n\r\n    console.log('FlexPaneBar.props',props)\r\n\r\n    var children = React.Children.map(props.children,(child)=>{\r\n        if (child.type.name == 'FlexPaneButtons') {\r\n\r\n            ////console.log('FlexPaneBar React.Children.map', props)\r\n\r\n            return React.cloneElement(child,props)\r\n        }\r\n        return child\r\n    })\r\n\r\n    //console.log('children',children)\r\n\r\n    return <React.Fragment>{children}</React.Fragment>\r\n}\r\n\r\nexport let FlexPaneTitle = (props) => {\r\n    return <div>FlexPaneTitle test</div>\r\n}\r\n\r\nexport let FlexPaneButtons = (props) => {\r\n    \r\n        //console.log('FlexPaneButtons.props',props)\r\n\r\n        var mode = props.modes[props.index]\r\n        var classNames1 = classNames(\"flexpane-resize\",\"flexpane-maximize\",{\"flexpane-button-active\":mode !== \"maximized\"})\r\n        var classNames2 = classNames(\"flexpane-resize\",\"flexpane-normalize\",{\"flexpane-button-active\":mode !== \"normal\"})\r\n        var classNames3 = classNames(\"flexpane-resize\",\"flexpane-hide\",{\"flexpane-button-active\":mode !== \"hidden\"})\r\n\r\n        //var buttonsBefore = (this.props.buttonsBefore || []).map( (button,i) => <li key={'b' + i}>{button}</li>)\r\n        //var buttonsAfter = (this.props.buttonsAfter || []).map( (button,i) => <li key={'a' + i}>{button}</li>)\r\n\r\n        return  <ul className=\"flexpane-buttons\"> \r\n                    <li key=\"0\"><button className={classNames1} onClick={() => {props.onButtonClick(props.index,\"maximized\")}}><svg enableBackground=\"new 0 0 32 32\" height=\"32px\" id=\"Layer_1\" version=\"1.1\" viewBox=\"0 0 32 32\" width=\"32px\" xmlSpace=\"preserve\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\"><path d=\"M18.221,7.206l9.585,9.585c0.879,0.879,0.879,2.317,0,3.195l-0.8,0.801c-0.877,0.878-2.316,0.878-3.194,0  l-7.315-7.315l-7.315,7.315c-0.878,0.878-2.317,0.878-3.194,0l-0.8-0.801c-0.879-0.878-0.879-2.316,0-3.195l9.587-9.585  c0.471-0.472,1.103-0.682,1.723-0.647C17.115,6.524,17.748,6.734,18.221,7.206z\" fill=\"#515151\"/></svg></button></li>\r\n                    <li key=\"1\"><button className={classNames2} onClick={() => {props.onButtonClick(props.index,\"normal\")}}><svg enableBackground=\"new 0 0 32 32\" height=\"32px\" id=\"Layer_1\" version=\"1.1\" viewBox=\"0 0 32 32\" width=\"32px\" xmlSpace=\"preserve\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\"><path d=\"M24.291,14.276L14.705,4.69c-0.878-0.878-2.317-0.878-3.195,0l-0.8,0.8c-0.878,0.877-0.878,2.316,0,3.194  L18.024,16l-7.315,7.315c-0.878,0.878-0.878,2.317,0,3.194l0.8,0.8c0.878,0.879,2.317,0.879,3.195,0l9.586-9.587  c0.472-0.471,0.682-1.103,0.647-1.723C24.973,15.38,24.763,14.748,24.291,14.276z\" fill=\"#515151\"/></svg></button></li>\r\n                    <li key=\"2\"><button className={classNames3} onClick={() => {props.onButtonClick(props.index,\"hidden\")}}><svg enableBackground=\"new 0 0 32 32\" height=\"32px\" id=\"Layer_1\" version=\"1.1\" viewBox=\"0 0 32 32\" width=\"32px\" xmlSpace=\"preserve\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\"><path d=\"M14.77,23.795L5.185,14.21c-0.879-0.879-0.879-2.317,0-3.195l0.8-0.801c0.877-0.878,2.316-0.878,3.194,0  l7.315,7.315l7.316-7.315c0.878-0.878,2.317-0.878,3.194,0l0.8,0.801c0.879,0.878,0.879,2.316,0,3.195l-9.587,9.585  c-0.471,0.472-1.104,0.682-1.723,0.647C15.875,24.477,15.243,24.267,14.77,23.795z\" fill=\"#515151\"/></svg></button></li>\r\n                    <li key=\"3\" className=\"flexpane-title\">{props.title}</li>\r\n                </ul>\r\n}\r\n\r\nexport class FlexPane extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.refPane = React.createRef()\r\n        //console.log('FlexPane.constructor',props)\r\n    }\r\n\r\n    render() {\r\n        var mode = this.props.modes[this.props.index]\r\n\r\n        var classNames_ = {\r\n            \"flexpane-pane-normal\" : mode === \"normal\",\r\n            \"flexpane-pane-maximum\": mode === \"maximized\",\r\n            \"flexpane-pane-hidden\": mode === \"hidden\"\r\n        }\r\n\r\n        if (this.props.className != null) {\r\n            classNames_[this.props.className] = true\r\n        }\r\n        \r\n        var refPane = this.props.refPane || this.refPane\r\n\r\n        var bar = null\r\n\r\n        console.log('this.props',this.props)\r\n\r\n        var children = React.Children.map(this.props.children, (child) => {\r\n            if (child.type.name == 'FlexPaneBar') {\r\n\r\n                //console.log('barProps',barProps)\r\n                bar = React.cloneElement(child, this.props)\r\n                console.log('bar',bar)\r\n                return null\r\n            }\r\n            return child\r\n        })\r\n\r\n        if (bar === null) {\r\n            //console.log('bar === null')\r\n            bar = <FlexPaneBar {...barProps}><FlexPaneButtons/><FlexPaneTitle/></FlexPaneBar>\r\n        }\r\n\r\n\r\n        return <React.Fragment>\r\n            {bar}\r\n            <div key={this.props.index} className={classNames(\"flexpane-pane\",classNames_)} ref={refPane} >{children}</div>\r\n            </React.Fragment>\r\n    }\r\n}\r\n\r\nexport class FlexPaneContainer extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        \r\n        var modes = React.Children.map(this.props.children, (child,index) => {\r\n            return child.props.mode || \"normal\";\r\n        })\r\n\r\n        this.state = {\r\n            modes: modes\r\n        }\r\n\r\n        this.handleButtonClick = this.handleButtonClick.bind(this)\r\n    }\r\n\r\n    handleButtonClick(index, mode) {\r\n        var modes = this.state.modes.slice()\r\n        if (mode === \"maximized\") {\r\n            modes = modes.map( mode => mode === \"maximized\" ? \"normal\" : mode )\r\n        }\r\n        modes[index] = mode\r\n        this.setState({modes:modes})\r\n    }\r\n\r\n    render() {\r\n        var children = React.Children.map(this.props.children, (child,index) => {\r\n            return React.cloneElement(child,{key:index, modes:this.state.modes, index:index, onButtonClick: this.handleButtonClick});\r\n        })\r\n        return (<div className=\"flexpane-container\">{children}</div>)\r\n    }\r\n}\r\n\r\n"]}